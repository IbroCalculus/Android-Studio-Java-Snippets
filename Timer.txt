Timer timer;


setContentView(R.layout.activity_first);

* FIRST WAY
timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                Intent intent = new Intent(getApplicationContext(), secondActivity.class);
                startActivity(intent);

            }
        }, DELAY); //How long the timing lasts

NB: declare const int variable DELAY = 5000; i.e 5 seconds
NB: For now, seem to work well only with open another intent after delay. Even toast did not work.

* SECOND WAY

    private void runProgressBar2() {

        progressBar.setProgress(0);
        counter = 0;
        final Timer t = new Timer();
        TimerTask tt = new TimerTask() {
            @Override
            public void run() {
                progressBar.setProgress(counter);
                counter++;
                if(counter == 100)
                {
                    t.cancel();
                }
            }
        };
        t.schedule(tt,0,100); //Every 100ms, do something
    }

* THIRD WAY: it keeps looping
        Handler handler = new Handler();
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                Toast.makeText(getApplicationContext(), "5 seconds gone", Toast.LENGTH_SHORT).show();

                handler.postDelayed(this, 5000);
            }
        };
        handler.post(runnable);

* FOURTH WAY: (countdown timer)

        new CountDownTimer(20000, 5000){
            int x = 0;
            @Override
            public void onTick(long l) {
                x ++;
                String v = String.valueOf(x);
                String v2 = String.valueOf(l/1000);
                String disp = "Interval NO. " + v + ": SECONDS LEFT: " + v2;
                Toast.makeText(getApplicationContext(), disp, Toast.LENGTH_SHORT).show();
            }

            @Override
            public void onFinish() {
                Toast.makeText(getApplicationContext(), "Iteration completed", Toast.LENGTH_SHORT).show();
            }   //duration, interval

        }.start();

1. ===== CREATE JAVA CLASS TO HANDLE THE SQLite SCHEME and extend SQLiteOpenHelper ====
public class DatabaseHelper extends SQLiteOpenHelper {


==== DEFINE VALUES AS REQUIRED (e.g) ======
public class DatabaseHelper extends SQLiteOpenHelper {

    private Context context;
    private static final String DATABASE_NAME = "testDB.db";
    private static final int DATABASE_VERSION = 1;

    private static final String TABLE_NAME = "test_table";
    private static final String COLUMN_ID = "_id_column";
    private static final String COLUMN_TITLE = "title_column";
    private static final String COLUMN_AUTHOR = "author_column";
    private static final String COLUMN_PAGES = "pages_column";

}


===== IMLEMENT THE 2 METHODS, and CREATE CONSTRUCTOR (select the First one, delete & insert other parametes as depicted) ====

    public DatabaseHelper(@Nullable Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
        this.context = context;
    }


    @Override
    public void onCreate(SQLiteDatabase sqLiteDatabase) {

    }

    @Override
    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {

    }



===== WITHIN public void onCreate(SQLiteDatabase sqLiteDatabase) {... ======

    @Override
    public void onCreate(SQLiteDatabase sqLiteDatabase) {
        String query = "CREATE TABLE " + TABLE_NAME +
                " (" +
                COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COLUMN_TITLE + " TEXT, " +
                COLUMN_AUTHOR + " TEXT, " +
                COLUMN_PAGES + " INTEGER" +
                ");"
                ;
        sqLiteDatabase.execSQL(query);
    }



===== WITHIN public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) { =====

    @Override
    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {
        sqLiteDatabase.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        onCreate(sqLiteDatabase);
    }





===2.  INSERT DATA IN DATABASE ====
=== ASSUME 2 ACTIVITIES, MainActivity.java and MainActivity2.java, WITHIN 2.java, CREATE FIELDS TO ACCEPT DATA FOR DATABASE STORAGE & RETRIEVAL===

Within the DatabaseHelper, create a method to enable inserting data into the database as shown:
NB: In this case, COLUMN_ID is auto increment, and primary key, hence, not included.


    void addToDatabase(String title, String author, int pages){
        SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();

        contentValues.put(COLUMN_TITLE, title);
        contentValues.put(COLUMN_AUTHOR, author);
        contentValues.put(COLUMN_PAGES, pages);
        long result = sqLiteDatabase.insert(TABLE_NAME, null, contentValues);
        if(result == -1){
            Toast.makeText(context, "Failed to save data", Toast.LENGTH_SHORT).show();
        }else{
            Toast.makeText(context, "Saved successfully!", Toast.LENGTH_SHORT).show();
        }
    }


--- WITHIN JAVA CLASS ----

    EditText et_BookTitle, et_BookAuthor, et_NumberOfPages;
    Button btn_Add;

        et_BookTitle = findViewById(R.id.et_BookTitle);
        et_BookAuthor = findViewById(R.id.et_BookAuthor);
        et_NumberOfPages = findViewById(R.id.et_NumberOfPages);
        btn_Add = findViewById(R.id.btn_Add);

        btn_Add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String book_title = et_BookTitle.getText().toString().trim();
                String book_author = et_BookAuthor.getText().toString().trim();
                String number_of_pages = et_NumberOfPages.getText().toString().trim();

                DatabaseHelper databaseHelper = new DatabaseHelper(getApplicationContext());
                databaseHelper.addToDatabase(book_title, book_author, Integer.parseInt(number_of_pages));
            }
        });

NB: Watch Stevdza-San tutorial on SQLite, to see how to work with this in conjunction with DB Browser for SQLite.

 OR (step)
View -> Tools Windows -> Device File Explorer -> data -> data -> com.ibsuleiman9.projectName (right-click, synchronize) -> databases
highlight all 3 files and save as in any easily accessible folder.
Open DB Browser for sqlite and open the .db file to access.












============== SERIALIZING AND DESERIALIZING NESTED OBJECTS ==============

For Custom type, check JSON3.txt

=============== Nested Objects ================
Assume two model classes, Employee2 and Address

public class Address {
    @SerializedName("country")
    private String country;
    @SerializedName("city")
    private String city;

    public Address(String country, String city) {
        this.country = country;
        this.city = city;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Override
    public String toString() {
        return "Address{" +
                "country='" + country + '\'' +
                ", city='" + city + '\'' +
                '}';
    }
}

public class Employee2 {
    @SerializedName("firstName")
    private String firstName;
    @SerializedName("age")
    private int age;
    @SerializedName("mail")
    private String mail;
    @SerializedName("address")
    private Address address;

    public Employee2(String firstName, int age, String mail, Address address) {
        this.firstName = firstName;
        this.age = age;
        this.mail = mail;
        this.address = address;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getMail() {
        return mail;
    }

    public void setMail(String mail) {
        this.mail = mail;
    }

    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    @Override
    public String toString() {
        return "Employee2{" +
                "firstName='" + firstName + '\'' +
                ", age=" + age +
                ", mail='" + mail + '\'' +
                ", address=" + address +
                '}';
    }
}


 ----- MainActivity.java ----

 ----- 1. Serialization ------

        Gson gson = new Gson();
        Address address2 = new Address("Nigeria", "Abuja");
        Employee2 emp2 = new Employee2("Alex",23,"alex23@email.com", address2);
        String emp2JsonString = gson.toJson(emp2);
        Log.d("emp2JsonString", emp2JsonString.toString());  // OUTPUT: {"address":{"city":"Abuja","country":"Nigeria"},"age":23,"firstName":"Alex","mail":"alex23@email.com"}

{
  "address": {
    "city": "Abuja",
    "country": "Nigeria"
  },
  "age": 23,
  "firstName": "Alex",
  "mail": "alex23@email.com"
}


 ----- Deserialization (2 methods) ------
    ====== Method A (Assuming it is just a json string NOT stored within a json file, or store sin just a variable) ========
	NB: Note the backward slash
	NB: You must have created the data class for this object as well, in this case it is the same 'Employee2' data class 

        Gson gson = new Gson();
        String emp2JsonString = "{\"address\":{\"city\":\"Abuja\",\"country\":\"Nigeria\"},\"age\":23,\"firstName\":\"Alex\",\"mail\":\"alex23@email.com\"}";
        Employee2 emp2Object = gson.fromJson(emp2JsonString, Employee2.class);
        Log.d("emp2Obj", emp2Object.toString());    // OUTPUT: Employee2{firstName='Alex', age=23, mail='alex23@email.com', address=Address{country='Nigeria', city='Abuja'}}
   

 ====== Method B (Assume a json file 'emp1.json' with content {"age":23,"firstName":"Alex","mail":"alex@email.com"}) ========
	NB: You must have created the data class for this object as well, in this case it is the same 'Employee' data class 

- Place the json file (ie emp1.json) within the 'assets' directory

        Gson gson = new Gson();
        String emp1JsonString = getJsonDataFromAsset(this, "emp1.json");	//getJsonDataFromAsset is a custom function, check below.
        Employee2 emp1Object = gson.fromJson(emp1JsonString, Employee2.class);
        Log.d("emp1Obj", emp1Object.toString());    // OUTPUT: Employee2{firstName='Alex', age=23, mail='alex23@email.com', address=Address{country='Nigeria', city='Abuja'}}


    public static String getJsonDataFromAsset(Context context, String fileName) {
        String jsonString;
        try {
            InputStream inputStream = context.getAssets().open(fileName);
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
            StringBuilder stringBuilder = new StringBuilder();
            String line;
            while ((line = bufferedReader.readLine()) != null) {
                stringBuilder.append(line);
            }
            bufferedReader.close();
            jsonString = stringBuilder.toString();
        } catch (IOException ioException) {
            ioException.printStackTrace();
            return null;
        }
        return jsonString;
    }






USE PERMISSION:
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />


======================= ENABLE BLUETOOTH =============================

    BluetoothAdapter bluetoothAdapter;
    Intent btEnablingIntent;
    int requestCodeForEnable;

        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        btEnablingIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
        int requestCodeForEnable = 1;


    private void enableBluetooth() {
        if(bluetoothAdapter==null)
        {
            Toast.makeText(this, "This device does not support bluetooth", Toast.LENGTH_SHORT).show();
        }
        else if(bluetoothAdapter.isEnabled())
        {
            bluetoothAdapter.disable();
            Toast.makeText(this, "Bluetooth disabled", Toast.LENGTH_SHORT).show();
        }
        else if(!bluetoothAdapter.isEnabled())
        {
            startActivityForResult(btEnablingIntent,requestCodeForEnable);
        }
    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        if (requestCode == requestCodeForEnable) {
            if (resultCode == RESULT_OK) {
                Toast.makeText(this, "Bluetooth Enabled", Toast.LENGTH_SHORT).show();
            } else if (resultCode == RESULT_CANCELED) {
                Toast.makeText(this, "Bluetooth connection cancelled", Toast.LENGTH_SHORT).show();
            }
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

==============================	ENABLING DISCOVERABILITY	==========================================
//Turns ON bluetooth event if it is not

    private void enableDiscoverability() {
        Intent intent = new Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
        intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, 10); //Discoverable for 10 secons. 0 -> Always discoverable
        startActivity(intent);



==============================	LIST PAIRED DEVICES ==============================

    BluetoothAdapter bluetoothAdapter;
    Listview listView;

        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
	listView = findViewById(R.id.listView);


    private void showPairedList() {
        if(bluetoothAdapter.isEnabled())
        {
            Set<BluetoothDevice> bt = bluetoothAdapter.getBondedDevices();
            String[] strings = new String[bt.size()];
            int index = 0;

            if(bt.size() > 0)
            {
                for(BluetoothDevice device: bt)
                {
                    strings[index] = device.getName();
                    index++;
                }
                ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_list_item_1, strings);
                listView.setAdapter(arrayAdapter);
            }
        }else
        {
            Toast.makeText(this, "You must enable bluetooth", Toast.LENGTH_SHORT).show();
        }
    }


=============================================	DISCOVER NEARBY DEVICES	=====================================

    ArrayList<String> stringArrayList = new ArrayList<String>();
    ArrayAdapter<String> arrayAdapter;
    BluetoothAdapter bluetoothAdapter1 = BluetoothAdapter.getDefaultAdapter();


        btn_list.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                discoverDevices();
            }
        });

        IntentFilter intentFilter = new IntentFilter(BluetoothDevice.ACTION_FOUND);
        registerReceiver(broadcastReceiver,intentFilter);

        arrayAdapter = new ArrayAdapter<String>(getApplicationContext(),android.R.layout.simple_list_item_1,stringArrayList);
        listView.setAdapter(arrayAdapter);
    }

//Outside onCreate, same place as methods
    BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            if(BluetoothDevice.ACTION_FOUND.equals(action))
            {
                BluetoothDevice bluetoothDevice = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                stringArrayList.add(bluetoothDevice.getName());
                arrayAdapter.notifyDataSetChanged();
            }
        }
    };

    private void discoverDevices() {
        bluetoothAdapter1.startDiscovery();
    }


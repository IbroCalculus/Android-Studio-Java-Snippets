
 CHECKK: Dialog, for customizeable pop up and similar
 CHECK ALSO: Dialog Activity.txt


NB: You can easily follow the android documentation guidelines. After creating a Fragment class (ie MyCustomDialogFrag) and Pasting their codes; within the onclick listener, do; 
                new MyCustomDialogFrag().show(getSupportFragmentManager(), "dialog1"); 	// "dialog1" is just any String



====================== 1. DISPLAY DIALOG WITH YES, NO Option =================================

    private void showAlert() {
        AlertDialog alertDialog = new AlertDialog.Builder(this)
                .setTitle("This is the title")
                .setMessage("This is the message")
                .setPositiveButton("Positive", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        Toast.makeText(getApplicationContext(), "Agreed", Toast.LENGTH_SHORT).show();
                    }
                })
                .setNegativeButton("Negative", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.dismiss();
                        Toast.makeText(getApplicationContext(), "Disgreed", Toast.LENGTH_SHORT).show();
                    }
                })
                .create();
        alertDialog.show();
    }



====================== 2. DISPLAY DIALOG WITH LIST OF ITEMS, SINGLE SELECTION =================================

    private void showAlertList(){
        AlertDialog.Builder alertDialog = new AlertDialog.Builder(this);
        final CharSequence[] itemList = {"One","Two","Three","Four"};
        alertDialog.setTitle("Select Item from List")
                .setItems(itemList, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        Toast.makeText(MainActivity.this, "Clicked on: " + itemList[i].toString(), Toast.LENGTH_SHORT).show();
                    }
                });
        AlertDialog myDialog = alertDialog.create();
        myDialog = alertDialog.show();
    }



====================== 3. DISPLAY DIALOG WITH CHECK BOX ITEMS =================================


====================== DISPLAY DIALOG WITH CUSTOM LAYOUT =================================
CHECK: "CodingSTUFF": Lecture 10

CREATE layout for the custom display, alert_dialog_layout.
 This layout has an editest with id; et_AlertDialogValue.

    private void showAlertList(){
        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
        View view = LayoutInflater.from(getApplicationContext()).inflate(R.layout.alert_dialog_layout, null);
        builder.setView(view);
        builder.setMessage("Please fill in the message box");
        builder.setPositiveButton("Positive", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {

                EditText et_AlertDialogValue = view.findViewById(R.id.et_AlertDialogValue);

                String et_AlertDialogValueS = et_AlertDialogValue.getText().toString();
                Toast.makeText(getApplicationContext(), "The value entered is: " + et_AlertDialogValueS, Toast.LENGTH_SHORT).show();
            }
        }).setNegativeButton("Negative", null);
        AlertDialog alertDialog = builder.create();
        alertDialog.show();
    }






